//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/n4hum/OneDrive/Escritorio/Codigo-MainDir/C#/ProyectoCompi/MiniCSharp/MiniCSharp/MiniCSParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace generated.parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniCSParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMiniCSParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MiniCSParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDecl([NotNull] MiniCSParser.VarDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] MiniCSParser.ClassDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDecl([NotNull] MiniCSParser.MethodDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormPars([NotNull] MiniCSParser.FormParsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpletype</c>
	/// labeled alternative in <see cref="MiniCSParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpletype([NotNull] MiniCSParser.SimpletypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>listOfSimple</c>
	/// labeled alternative in <see cref="MiniCSParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListOfSimple([NotNull] MiniCSParser.ListOfSimpleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>userTypeOrArray</c>
	/// labeled alternative in <see cref="MiniCSParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserTypeOrArray([NotNull] MiniCSParser.UserTypeOrArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="MiniCSParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntType([NotNull] MiniCSParser.IntTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>charType</c>
	/// labeled alternative in <see cref="MiniCSParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharType([NotNull] MiniCSParser.CharTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="MiniCSParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolType([NotNull] MiniCSParser.BoolTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="MiniCSParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringType([NotNull] MiniCSParser.StringTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MiniCSParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MiniCSParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActPars([NotNull] MiniCSParser.ActParsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] MiniCSParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.condTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondTerm([NotNull] MiniCSParser.CondTermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondFact([NotNull] MiniCSParser.CondFactContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCast([NotNull] MiniCSParser.CastContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] MiniCSParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] MiniCSParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] MiniCSParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.listLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListLiteral([NotNull] MiniCSParser.ListLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignator([NotNull] MiniCSParser.DesignatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelop([NotNull] MiniCSParser.RelopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddop([NotNull] MiniCSParser.AddopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulop([NotNull] MiniCSParser.MulopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.ident"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdent([NotNull] MiniCSParser.IdentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseBlock([NotNull] MiniCSParser.CaseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCSParser.usingDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingDecl([NotNull] MiniCSParser.UsingDeclContext context);
}
} // namespace generated.parser
